openapi: 3.0.2
info:
    title: School-Api
    version: 1.0.0
    description: |-
        ### This is a Swagger UI for our School-Api 

        ### Error handlingErrors are presented using the HTTP status codes 400-599.

        The response include a more detailed explanation about the error in the body.

        ```{  "error": "Cleartext explanation of the error that occurred"}```
        ### Generic API errors

        These error responses can be returned by any of the described endpoints.
        | HTTP status  |  Description |
        |---|---|
        | 400| Bad input parameters or invalid request. More information can be found in the response body.
        | 401| The consumer does not have access to the requested resource or the provided token is not valid.
        | 404| The requested resource can not be found or the user does not have access to the resource.
        | 5XX| A server error has occurred while processing the request.
paths:
    /users:
        get:
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Get all Users:
                                    value: |-
                                        [
                                            return {"id":g.id,"name":g.name,"group":g.group}
                                        ]
                    description: |
                        Successful Get
                '404':
                    description: GET Not Found
                '500':
                    description: Internal server error
            summary: GET Users
        put:
            requestBody: {}
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                PUT example:
                                    value: "\t[ return {\"id\":g.id,\"name\":g.name,\"group\":g.group} ]"
                    description: Successful Put
            summary: PUT Users
        post:
            requestBody:
                required: true
            tags:
                - Users
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items: {}
                    description: Successful Post
                '404':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                    description: The Post was not successful
            summary: POST Users
        delete:
            tags:
                - Users
            responses:
                '200':
                    description: Successful Delete
            summary: DELETE Users
    '/users/{id}':
        summary: Handle users by its ID
        get:
            tags:
                - Users
            parameters:
                -
                    examples:
                        Martin:
                            value: '3'
                    name: id
                    description: |
                        Get all users by id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                One User:
                                    value: '{id:3,name:"martin",password:''b_phi<ibh'',group:"TARpe21"},'
                    description: |+
                        Success

                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                            examples:
                                error:
                                    value:
                                        ' error': User not found
                    description: |
                        Couldnt find a user
        parameters:
            -
                examples:
                    john marston:
                        value: '4'
                name: id
                description: |
                    Get all users by id
                schema:
                    type: integer
                in: path
                required: true
    /Schools:
        get:
            tags:
                - School
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Return all schools:
                                    value: "\t[ return {\"id\":g.id,\"name\":g.name,\"director\":g.director} ]"
                    description: |
                        GET Schools
            summary: GET Schools
        put:
            tags:
                - School
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Put all schools:
                                    value: |+

            summary: PUT Schools
        post:
            tags:
                - School
            summary: POST Schools
        delete:
            tags:
                - School
            summary: DELETE Schools
    '/Schools/{id}':
        get:
            tags:
                - School
        put:
            tags:
                - School
        post:
            tags:
                - School
        delete:
            tags:
                - School
    /Lessons:
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Get all lessons:
                                    value: |-
                                        let data = 
                                            {
                                                    "id":6
                                                    "lessonsStart":9:30
                                                    "lesson": Programming
                                                }
                                                
                    description: Succssesfuly Get
            summary: Get lesson
        put:
            responses:
                '200':
                    description: Succssesfuly Put
            summary: Put lesson
        post:
            requestBody: {}
            responses:
                '200':
                    description: Succssesfuly Post
            summary: Post lesson
        delete:
            responses:
                '200':
                    description: Succssesfuly Delete
            summary: Delete lesson
    '/Lessons/{id}':
        get:
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                ID:
                                    value: |-
                                        let data = [
                                            {id: 1, LessonsStart: '9:30', Lesson:"Programming"},
                                            {id: 2, LessonsStart: '8.30', Lesson:"Biology"},
                                            {id: 3, LessonsStart: '12.45', Lesson:"P.E"},
                                            {id: 4, LessonsStart: '8.30', Lesson:"Math"}
                                        ]
                    description: Succssesfuly Get
                '404':
                    description: Could not find Lesson
        parameters:
            -
                examples:
                    Programming:
                        value: '7'
                name: id
                description: Get all lessons by id
                schema:
                    type: integer
                in: path
                required: true
    /Groups:
        get:
            tags:
                - Groups
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    format: int32
                                    type: integer
                            examples:
                                Get all groups:
                                    value: |-
                                        let data =
                                            {
                                                    "id": 6
                                                    "name": Mvcpe21
                                                    "students": 16
                                                }
                                                
                    description: Successful Get
            summary: GET groups
        put:
            requestBody: {}
            tags:
                - Groups
            responses:
                '200':
                    description: Successful Put
            summary: PUT groups
        post:
            requestBody: {}
            tags:
                - Groups
            responses:
                '200':
                    description: Successful Post
            summary: POST group
        delete:
            tags:
                - Groups
            responses:
                '200':
                    description: Successful Delete
            summary: Delete group
    '/Groups/{id}':
        get:
            parameters:
                -
                    examples:
                        Mvcpe21:
                            value: '7'
                    name: id
                    description: Get Groups by id
                    schema:
                        type: integer
                    in: path
                    required: true
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                ID:
                                    value: |-
                                        let data = [
                                            { id: 1, name: "Tarpe21", Students: 16 },
                                            { id: 2, name: "Iot", Students:24  },
                                            { id: 3, name: "Mvcpe20", Students: 12 },
                                            { id: 4, name: "Tatge22", Students: 18 },
                                            { id: 5, name: "SoT", Students: 5 }
                                        ]
                    description: Success
                '404':
                    description: Group not found
        parameters:
            -
                examples:
                    Mvcpe21:
                        value: '7'
                name: id
                description: Get Groups by id
                schema:
                    type: integer
                in: path
                required: true
components:
    schemas:
        Error:
            title: Root Type for Error
            description: ''
            type: object
            properties:
                ' error':
                    type: string
            example:
                ' error': error message

